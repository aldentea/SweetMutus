<base:BasicWindow x:Class="Aldentea.SweetMutus.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
				xmlns:sys="clr-namespace:System;assembly=mscorlib"
				xmlns:base="clr-namespace:Aldentea.Wpf.Application;assembly=AldenteaWpfApplication"
        xmlns:util="clr-namespace:Aldentea.Wpf.Utility;assembly=AldenteaWpfUtility"
				xmlns:hypermutus="clr-namespace:HyperMutus;assembly=MutusBase"
				xmlns:grand="clr-namespace:GrandMutus.Base;assembly=GrandMutusBase"
				xmlns:local="clr-namespace:Aldentea.SweetMutus"
				xmlns:ud="clr-namespace:Aldentea.Wpf.Controls;assembly=UpDownControl"
				OpenFileDialogFilter="SweetMutusファイル(*.smt)|*.smt|mutus2ファイル(*.mtu)|*.mtu"
				SaveFileDialogFilter="SweetMutusファイル(*.smt)|*.smt"
        Height="600" Width="800">
	<Window.Resources>
		<util:CaptionConverter x:Key="captionConverter" ApplicationName="SweetMutus" />
		<util:TimeSpanDoubleConverter x:Key="timeSpanDoubleConverter" />
		<local:DurationConverter x:Key="sabiPosConverter" />
		<local:DurationConverter x:Key="playPosConverter" />
		<grand:NullableIntConverter x:Key="noConverter" />
		<grand:VisibilityConverter x:Key="categoryVisibilityConverter" />
		<grand:VisibilityConverter x:Key="fileNameVisibilityConverter" />
		<Style TargetType="TextBlock" x:Key="numericCellStyle">
			<Setter Property="HorizontalAlignment" Value="Right" />
			<Setter Property="Padding" Value="4,0" />
		</Style>
	</Window.Resources>
	<Window.Title>
		<MultiBinding Converter="{StaticResource captionConverter}">
			<Binding Path="FileName" />
			<Binding Path="IsModified" />
			<Binding Path="IsReadOnly" />
		</MultiBinding>
	</Window.Title>
	<Window.CommandBindings>
		<CommandBinding Command="{x:Static grand:Commands.AddQuestionsCommand}"
										Executed="AddQuestions_Executed" CanExecute="Always_CanExecute"/>
		<CommandBinding Command="{x:Static local:Commands.ExportCommand}"
										Executed="Export_Executed" CanExecute="Always_CanExecute" />
		<CommandBinding Command="{x:Static grand:Commands.SetRootDirectoryCommand}"
										Executed="SetRootDirectory_Executed" CanExecute="Always_CanExecute" />
		<CommandBinding Command="{x:Static local:Commands.SaveAsMtqCommand}"
										Executed="SaveAsMtq_Executed" CanExecute="Always_CanExecute" />
		<CommandBinding Command="Play"
										Executed="Play_Executed"
										CanExecute="Play_CanExecute" />
		<CommandBinding
										Command="{x:Static hypermutus:Commands.SwitchPlayPauseCommand}"
										Executed="SwitchPlayPause_Executed"
										CanExecute="SwitchPlayPause_CanExecute" />
		<CommandBinding
										Command="{x:Static hypermutus:Commands.SeekSabiCommand}"
										Executed="SeekSabi_Executed"
										CanExecute="SongPlayer_CanExecute" />
		<CommandBinding Command="{x:Static grand:Commands.SetSabiPosCommand}"
										Executed="SetSabiPos_Executed"
										CanExecute="SongPlayer_CanExecute" />
		<CommandBinding Command="{x:Static local:Commands.SetPlayPosCommand}"
										Executed="SetPlayPos_Executed"
										CanExecute="SongPlayer_CanExecute" />
		<CommandBinding Command="{x:Static hypermutus:Commands.SeekRelativeCommand}"
										Executed="SeekRelative_Executed"
										CanExecute="SongPlayer_CanExecute" />
		<CommandBinding Command="NextTrack"
										Executed="NextTrack_Executed"
										CanExecute="SongPlayer_CanExecute" />
		<CommandBinding Command="PreviousTrack"
										Executed="PreviousTrack_Executed"
										CanExecute="SongPlayer_CanExecute" />
		<CommandBinding Command="{x:Static local:Commands.SaveSongInformationCommand}"
										Executed="SaveSongInformation_Executed"
										CanExecute="SaveSongInformation_CanExecute" />
		<CommandBinding Command="{x:Static local:Commands.ChangeCategoryCommand}"
										Executed="ChangeCategory_Executed"
										CanExecute="ChangeCategory_CanExecute" />
		<CommandBinding Command="{x:Static local:Commands.ChangeFileNameCommand}"
										Executed="ChangeFileName_Executed"
										CanExecute="ChangeFileName_CanExecute" />
		<CommandBinding Command="{x:Static local:Commands.IncrementNoCommand}"
										Executed="IncrementNo_Executed"
										CanExecute="IncrementNo_CanExecute" />
		<CommandBinding Command="{x:Static local:Commands.DecrementNoCommand}"
										Executed="DecrementNo_Executed"
										CanExecute="IncrementNo_CanExecute" />
		<CommandBinding Command="{x:Static local:Commands.OmitQuestionsCommand}"
										Executed="OmitQuestions_Executed"
										CanExecute="IncrementNo_CanExecute" />
		<CommandBinding Command="{x:Static local:Commands.EnterQuestionsCommand}"
										Executed="EnterQuestions_Executed"
										CanExecute="IncrementNo_CanExecute" />
	</Window.CommandBindings>
	<Window.InputBindings>
		<KeyBinding Key="F5" Command="{x:Static  hypermutus:Commands.SwitchPlayPauseCommand}" />
		<KeyBinding Key="F7" Modifiers="Shift" Command="{x:Static hypermutus:Commands.SeekRelativeCommand}" CommandParameter="30" />
		<KeyBinding Key="F7" Command="{x:Static hypermutus:Commands.SeekRelativeCommand}" CommandParameter="5" />
		<KeyBinding Key="F4" Command="{x:Static hypermutus:Commands.SeekRelativeCommand}" CommandParameter="-5" />
		<KeyBinding Key="F4" Modifiers="Shift" Command="{x:Static hypermutus:Commands.SeekRelativeCommand}" CommandParameter="-30" />
		<KeyBinding Key="F6" Command="{x:Static hypermutus:Commands.SeekSabiCommand}" />
		<KeyBinding Key="F6" Modifiers="Shift" Command="{x:Static grand:Commands.SetSabiPosCommand}" />
		<KeyBinding Key="F6" Modifiers="Ctrl" Command="{x:Static local:Commands.SetPlayPosCommand}" />
		<KeyBinding Key="F3" Command="PreviousTrack" />
		<KeyBinding Key="F8" Command="NextTrack" />
		<KeyBinding Key="I" Modifiers="Control" Command="{x:Static local:Commands.SaveSongInformationCommand}"
								CommandParameter="{Binding ElementName=dataGridQuestions, Path=SelectedItem}" />
		<KeyBinding Key="R" Modifiers="Control" Command="{x:Static local:Commands.ChangeFileNameCommand}"
								CommandParameter="{Binding ElementName=dataGridQuestions, Path=SelectedItem}" />
	</Window.InputBindings>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>
		
		<Menu Name="MainMenu" Grid.Row="0" HorizontalAlignment="Stretch" Padding="3">
			<MenuItem Header="ファイル(_F)">
				<MenuItem Header="新規作成(_N)" Command="New" />
				<MenuItem Header="開く(_O)" Command="Open" />
				<MenuItem Header="履歴から開く(_H)" Name="menuItemHistory" />
				<MenuItem Header="保存(_S)" Command="Save" />
				<MenuItem Header="名前をつけて保存(_A)" Command="SaveAs" />
				<MenuItem Header="エクスポート(_E)" Command="{x:Static local:Commands.ExportCommand}" />
				<MenuItem Header="HyperMutus用に保存(_M)" Command="{x:Static local:Commands.SaveAsMtqCommand}" />
				<Separator />
				<MenuItem Header="終了(_X)" Command="Close" />
			</MenuItem>
			<MenuItem Header="編集(_E)">
				<MenuItem Header="元に戻す(_U)" Command="Undo" />
				<MenuItem Header="やり直し(_R)" Command="Redo" />
			</MenuItem>
			<MenuItem Header="曲リスト(_S)">
				<MenuItem Header="曲追加(_A)" Command="{x:Static grand:Commands.AddQuestionsCommand}" />
				<MenuItem Header="曲追加(フォルダ選択)(_D)"
									Command="{x:Static grand:Commands.AddQuestionsCommand}">
					<MenuItem.CommandParameter>
						<sys:Boolean>True</sys:Boolean>
					</MenuItem.CommandParameter>
				</MenuItem>
				<MenuItem Header="ホームフォルダ変更(_H)" Command="{x:Static grand:Commands.SetRootDirectoryCommand}" />
			</MenuItem>
			<MenuItem Header="表示(_V)">
				<MenuItem Name="menuItemCategoryVisible" Header="カテゴリ" IsCheckable="True" IsChecked="False" />
				<MenuItem Name="menuItemFileNameColumnVisible" Header="ファイル名列" IsCheckable="True" IsChecked="False" Visibility="Collapsed" />
			</MenuItem>
			<MenuItem Header="曲再生(_P)">
				<MenuItem Header="再生開始" Command="Play"
									CommandParameter="{Binding ElementName=dataGridQuestions, Path=SelectedItem}" />
			</MenuItem>
		</Menu>

		<StackPanel Orientation="Horizontal" Grid.Row="1"
								Visibility="{Binding ElementName=menuItemCategoryVisible, Path=IsChecked, Converter={StaticResource categoryVisibilityConverter}}"
		>
			<GroupBox Header="表示カテゴリ" Margin="6,6"
				Width="213"
							>
				<GroupBox.CommandBindings>
					<CommandBinding Command="{x:Static local:Commands.AddCategoryCommand}"
												Executed="AddCategory_Executed" CanExecute="AddCategory_CanExecute" />
				</GroupBox.CommandBindings>
				<StackPanel>
					<ComboBox HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="6,3" x:Name="comboBoxCategories"
									ItemsSource="{Binding Path=Categories, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
										SelectedItem="{Binding Path=CurrentCategory, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
										/>
					<Expander Header="カテゴリ追加" Collapsed="Expander_Expanded" Expanded="Expander_Expanded">
						<StackPanel Orientation="Horizontal">
							<TextBox MinWidth="100" Margin="3,5" x:Name="textBoxNewCategory" ToolTip="追加するカテゴリの名前を入れて下さい。" />
							<Button Content="追加" MinWidth="60" Margin="3"
										Command="{x:Static local:Commands.AddCategoryCommand}"
										CommandParameter="{Binding Text, ElementName=textBoxNewCategory}" />
						</StackPanel>
					</Expander>
				</StackPanel>
			</GroupBox>
			<GroupBox Header="カテゴリ移動" Width="200">
				<Grid>
					<ComboBox Name="comboBoxDestinationCategory"  Height="30"
										VerticalAlignment="Top" Margin="0,5"
										ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Categories}"
										>
					</ComboBox>
					<Button Content="移動" VerticalAlignment="Top" Height="30" Margin="0,40,0,5"
									Command="{x:Static local:Commands.ChangeCategoryCommand}"
									CommandParameter="{Binding ElementName=comboBoxDestinationCategory, Path=SelectedItem}"
									ToolTip="選択中の問題を、上で指定したカテゴリに移動します。" />
				</Grid>
			</GroupBox>
		</StackPanel>

		<Grid Grid.Row="2">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
		<DataGrid Grid.Column="0" Margin="10" VerticalAlignment="Stretch"
							ItemsSource="{Binding Questions}" AutoGenerateColumns="False"
							CanUserAddRows="False" CanUserSortColumns="False"
							Name="dataGridQuestions"
							AllowDrop="True"
							DragOver="dataGridQuestions_DragOver"
							Drop="dataGridQuestions_Drop"
							>
			<DataGrid.Columns>
				<DataGridTextColumn Header="#" Binding="{Binding Path=ID}" IsReadOnly="True"
														ElementStyle="{StaticResource numericCellStyle}" Visibility="Collapsed" />
				<DataGridTextColumn Header="No" Binding="{Binding Path=No, Converter={StaticResource noConverter}}"
														ElementStyle="{StaticResource numericCellStyle}" />
				<DataGridTextColumn Header="曲名" Binding="{Binding Path=Title}" Width="*" />
				<DataGridTextColumn Header="アーティスト" Binding="{Binding Path=Artist}" Width="*" />
				<!-- このVisibilityのバインディングが機能していない。
				たぶんXAMLのスコープの話だと思うが、どうすればいいのかはよくわからない。-->
					<DataGridTextColumn Header="ファイル名" Binding="{Binding Path=RelativeFileName}" IsReadOnly="True" Width="*"
														Visibility="{Binding ElementName=menuItemFileNameColumnVisible, Path=IsChecked,
																									Converter={StaticResource fileNameVisibilityConverter}}"
														>
						<DataGridTextColumn.ElementStyle>
							<Style TargetType="TextBlock">
								<Setter Property="ToolTip" Value="{Binding Path=FileName}" />
							</Style>
						</DataGridTextColumn.ElementStyle>
					</DataGridTextColumn>
					<DataGridTextColumn Header="開始"
														Binding="{Binding Path=PlayPos, Converter={StaticResource sabiPosConverter}, ConverterParameter=2}"
														ElementStyle="{StaticResource numericCellStyle}" MinWidth="60" />
				<DataGridTextColumn Header="サビ"
														Binding="{Binding Path=SabiPos, Converter={StaticResource sabiPosConverter}, ConverterParameter=2}"
														ElementStyle="{StaticResource numericCellStyle}" MinWidth="60" />
			</DataGrid.Columns>
			<DataGrid.CommandBindings>
				<CommandBinding Command="Delete"
												Executed="DeleteQuestions_Executed" />
			</DataGrid.CommandBindings>
				<DataGrid.InputBindings>
					<KeyBinding 
						Key="F5" 
						Command="{x:Static hypermutus:Commands.SwitchPlayPauseCommand}"
						CommandParameter="{Binding
							RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid},
							Path=SelectedItem}"
					/>
				</DataGrid.InputBindings>
		</DataGrid>
			
			<StackPanel Grid.Column="1" Orientation="Vertical" VerticalAlignment="Center" Margin="0">
				<StackPanel.Resources>
					<Style TargetType="{x:Type Button}">
						<Setter Property="Width" Value="36" />
						<Setter Property="Height" Value="36" />
						<Setter Property="Margin" Value="10" />
						<Setter Property="CommandParameter" Value="{Binding ElementName=dataGridQuestions, Path=SelectedItems}" />
					</Style>
				</StackPanel.Resources>
				<Button Content="○"  Command="Play"
								CommandParameter="{Binding ElementName=dataGridQuestions, Path=SelectedItem}"
								ToolTip="再生を開始します。" />
				<Button Content="入" Command="{x:Static local:Commands.EnterQuestionsCommand}"
								ToolTip="選択した問題にNoをつけます。" />
				<Button Content="除" Command="{x:Static local:Commands.OmitQuestionsCommand}"
								ToolTip="選択した問題の番号を外します。" />
				<Button Content="↑" Command="{x:Static local:Commands.DecrementNoCommand}"
								ToolTip="選択した問題の番号を1つ減らします。" />
				<Button Content="↓" Command="{x:Static local:Commands.IncrementNoCommand}"
								ToolTip="選択した問題のNoを1つ増やします。" />
			</StackPanel>
		</Grid>
		
		<Expander Header="曲再生" Name="expanderSongPlayer" Margin="0" Grid.Row="3"
							DataContext="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=CurrentSong}">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>
				<Button Content="再生" Grid.Row="0" Height="40" Width="75"
								HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,5"
								Command="{x:Static hypermutus:Commands.SwitchPlayPauseCommand}" />
				<Button Content="サビ" Grid.Row="0" Height="40" Width="75"
								HorizontalAlignment="Left" VerticalAlignment="Center" Margin="99,5,0,5"
								Command="{x:Static hypermutus:Commands.SeekSabiCommand}" />
				<TabControl Grid.Row="0" Margin="240,0,0,0" Width="300" Height="60" HorizontalAlignment="Left"
										TabStripPlacement="Left">
					<TabItem Header="サビ">
						<Grid>
						<Button Content="サビ設定" Grid.Row="0" Height="34" Width="75"
								HorizontalAlignment="Left" Margin="0,0,0,0"
								Command="{x:Static grand:Commands.SetSabiPosCommand}" />
						<TextBox HorizontalAlignment="Left" Grid.Row="0" Height="34" Margin="100,0,0,0"
									TextWrapping="Wrap" Text="{Binding Path=SabiPos, Converter={StaticResource sabiPosConverter}, ConverterParameter=2}"
									Width="100" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
						<ud:UpDownControl Grid.Row="0" Height="34" Width="32" Margin="200,0,0,0" HorizontalAlignment="Left"
									UpClick="UpDownControl_UpClick" DownClick="UpDownControl_DownClick" />
						</Grid>
					</TabItem>
					<TabItem Header="開始">
						<Grid>
							<Button Content="開始位置設定" Grid.Row="0" Height="34" Width="85"
								HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,5,0,5"
								Command="{x:Static local:Commands.SetPlayPosCommand}" />
							<TextBox HorizontalAlignment="Left" Grid.Row="0" Height="34" Margin="100,5,0,5"
									TextWrapping="Wrap" Text="{Binding Path=PlayPos, Converter={StaticResource playPosConverter}, ConverterParameter=2}"
									VerticalAlignment="Center" Width="100" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
							<ud:UpDownControl Grid.Row="0" Height="34" Width="32" Margin="200,5,0,5" HorizontalAlignment="Left" VerticalAlignment="Center"
									UpClick="UpDownControlPlayPos_UpClick" DownClick="UpDownControlPlayPos_DownClick" />
						</Grid>
					</TabItem>
				</TabControl>
				<Slider HorizontalAlignment="Left" Grid.Row="0" Margin="590,0,0,0" VerticalAlignment="Center" Width="180" ToolTip="音量"
								Value="{Binding RelativeSource={RelativeSource AncestorType=local:MainWindow}, Path=SongPlayer.Volume}"
								Maximum="1" Minimum="0" SmallChange="0.01" LargeChange="0.1" AutoToolTipPrecision="2" IsSelectionRangeEnabled="True" AutoToolTipPlacement="BottomRight" />
				
				<Slider HorizontalAlignment="Left" Grid.Row="1" Height="36" Margin="31,4,0,0" VerticalAlignment="Center" Width="360"
								TickFrequency="60" Maximum="100" Minimum="0" Name="sliderSeekSong" TickPlacement="BottomRight"
								LargeChange="30" SmallChange="5"
								Value="{Binding RelativeSource={RelativeSource AncestorType=Window},
												Path=SongPlayer.CurrentPosition, Mode=TwoWay, Converter={StaticResource timeSpanDoubleConverter}}"/>
				<Label Name="labelCurrentPosition"  Grid.Row="1"
								Content="{Binding RelativeSource={RelativeSource AncestorType=Window},
													Path=SongPlayer.CurrentPosition, Mode=OneWay}" ContentStringFormat="m\:ss"
								HorizontalAlignment="Left"
								Margin="421,0,0,0" VerticalAlignment="Center"/>
				<Label Name="labelDuration"
								HorizontalAlignment="Left" ContentStringFormat="m\:ss" Content="{x:Static sys:TimeSpan.Zero}"
								Margin="521,0,0,0" Grid.Row="1" VerticalAlignment="Center"/>
			</Grid>
		</Expander>

		<StatusBar Height="32" Grid.Row="4" />
	</Grid>
</base:BasicWindow>
