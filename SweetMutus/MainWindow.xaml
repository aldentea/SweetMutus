<appbase:BasicWindow x:Class="Aldentea.SweetMutus.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
				xmlns:sys="clr-namespace:System;assembly=mscorlib"
				xmlns:appbase="clr-namespace:Aldentea.Wpf.Application;assembly=AldenteaWpfApplication"
        xmlns:util="clr-namespace:Aldentea.Wpf.Utility;assembly=AldenteaWpfUtility"
				xmlns:hypermutus="clr-namespace:HyperMutus;assembly=MutusBase"
				xmlns:grand="clr-namespace:GrandMutus.Base;assembly=GrandMutusBase"
				xmlns:base="clr-namespace:Aldentea.SweetMutus.Base;assembly=SweetMutusBase"
				xmlns:local="clr-namespace:Aldentea.SweetMutus"
				xmlns:ud="clr-namespace:Aldentea.Wpf.Controls;assembly=UpDownControl"
				OpenFileDialogFilter="SweetMutusファイル(*.smt)|*.smt|mutus2ファイル(*.mtu)|*.mtu|HyperMutusファイル(*.mtu,*.mtq)|*.mtu;*.mtq"
				SaveFileDialogFilter="SweetMutusファイル(*.smt)|*.smt"
        Height="600" Width="800"
				Initialized="MainWindow_Initialized"
				Closed="MainWindow_Closed">
	<Window.Resources>
		<util:CaptionConverter x:Key="captionConverter" ApplicationName="SweetMutus" />
		<util:TimeSpanDoubleConverter x:Key="timeSpanDoubleConverter" />
		<base:DurationConverter x:Key="durationConverter" />
		<base:EqualsConverter x:Key="equalsConverter" />
		<base:FreePlayConverter x:Key="freePlayConverter" />
		<grand:NullableIntConverter x:Key="noConverter" />
		<grand:VisibilityConverter x:Key="categoryVisibilityConverter" />
		<grand:VisibilityConverter x:Key="fileNameVisibilityConverter" />
		<Style TargetType="TextBlock" x:Key="numericCellStyle">
			<Setter Property="HorizontalAlignment" Value="Right" />
			<Setter Property="Padding" Value="4,0" />
		</Style>
		<!-- 音量設定用スライダのスタイル -->
		<Style TargetType="Slider" x:Key="volumeSliderStyle">
			<Setter Property="VerticalAlignment" Value="Center" />
			<Setter Property="Maximum" Value="1" />
			<Setter Property="Minimum" Value="0" />
			<Setter Property="AutoToolTipPlacement" Value="BottomRight" />
			<Setter Property="AutoToolTipPrecision" Value="2" />
			<Setter Property="SmallChange" Value="0.01" />
			<Setter Property="LargeChange" Value="0.1" />
			<Setter Property="ToolTip" Value="音量" />
		</Style>
	</Window.Resources>
	<Window.Title>
		<MultiBinding Converter="{StaticResource captionConverter}">
			<Binding Path="FileName" />
			<Binding Path="IsModified" />
			<Binding Path="IsReadOnly" />
		</MultiBinding>
	</Window.Title>
	<Window.CommandBindings>
		<CommandBinding Command="{x:Static grand:Commands.AddQuestionsCommand}"
										Executed="AddQuestions_Executed" CanExecute="Always_CanExecute"/>
		<CommandBinding Command="{x:Static base:Commands.ExportCommand}"
										Executed="Export_Executed" CanExecute="Always_CanExecute" />
		<CommandBinding Command="{x:Static grand:Commands.SetRootDirectoryCommand}"
										Executed="SetRootDirectory_Executed" CanExecute="Always_CanExecute" />
		<CommandBinding Command="{x:Static base:Commands.SaveAsMtqCommand}"
										Executed="SaveAsMtq_Executed" CanExecute="Always_CanExecute" />
		<CommandBinding Command="Play"
										Executed="Play_Executed"
										CanExecute="Play_CanExecute" />
		<CommandBinding
										Command="{x:Static hypermutus:Commands.SwitchPlayPauseCommand}"
										Executed="SwitchPlayPause_Executed"
										CanExecute="SwitchPlayPause_CanExecute" />
		<CommandBinding
										Command="{x:Static hypermutus:Commands.SeekSabiCommand}"
										Executed="SeekSabi_Executed"
										CanExecute="SongPlayer_CanExecute" />
		<CommandBinding Command="{x:Static grand:Commands.SetSabiPosCommand}"
										Executed="SetSabiPos_Executed"
										CanExecute="SongPlayer_CanExecute" />
		<CommandBinding Command="{x:Static base:Commands.SetPlayPosCommand}"
										Executed="SetPlayPos_Executed"
										CanExecute="SongPlayer_CanExecute" />
		<CommandBinding Command="{x:Static base:Commands.SetStopPosCommand}"
										Executed="SetStopPos_Executed"
										CanExecute="SongPlayer_CanExecute" />
		<CommandBinding Command="{x:Static hypermutus:Commands.SeekRelativeCommand}"
										Executed="SeekRelative_Executed"
										CanExecute="SongPlayer_CanExecute" />
		<CommandBinding Command="NextTrack"
										Executed="NextTrack_Executed"
										CanExecute="SongPlayer_CanExecute" />
		<CommandBinding Command="PreviousTrack"
										Executed="PreviousTrack_Executed"
										CanExecute="SongPlayer_CanExecute" />
		<CommandBinding Command="{x:Static base:Commands.SaveSongInformationCommand}"
										Executed="SaveSongInformation_Executed"
										CanExecute="SaveSongInformation_CanExecute" />
		<CommandBinding Command="{x:Static base:Commands.ChangeCategoryCommand}"
										Executed="ChangeCategory_Executed"
										CanExecute="ChangeCategory_CanExecute" />
		<CommandBinding Command="{x:Static base:Commands.ChangeFileNameCommand}"
										Executed="ChangeFileName_Executed"
										CanExecute="ChangeFileName_CanExecute" />
		<CommandBinding Command="{x:Static base:Commands.IncrementNoCommand}"
										Executed="IncrementNo_Executed"
										CanExecute="IncrementNo_CanExecute" />
		<CommandBinding Command="{x:Static base:Commands.DecrementNoCommand}"
										Executed="DecrementNo_Executed"
										CanExecute="IncrementNo_CanExecute" />
		<CommandBinding Command="{x:Static base:Commands.OmitQuestionsCommand}"
										Executed="OmitQuestions_Executed"
										CanExecute="IncrementNo_CanExecute" />
		<CommandBinding Command="{x:Static base:Commands.EnterQuestionsCommand}"
										Executed="EnterQuestions_Executed"
										CanExecute="IncrementNo_CanExecute" />
		<CommandBinding
			Command="{x:Static base:Commands.ImportCommand}"
			Executed="Import_Executed"
			CanExecute="Always_CanExecute" />
		<CommandBinding Command="{x:Static base:Commands.SetWindowModeCommand}"
										Executed="SetWindowMode_Executed"
										CanExecute="Always_CanExecute" />
		<!-- 以下，出題関連 -->
		<CommandBinding Command="{x:Static hypermutus:QuizCommands.Start}"
										Executed="StartQuestion_Executed"
										CanExecute="StartQuestion_CanExecute" />
		<CommandBinding Command="{x:Static base:Commands.NextQuestionCommand}"
										Executed="NextQuestion_Executed"
										CanExecute="NextQuestion_CanExecute" />
		<CommandBinding Command="{x:Static hypermutus:QuizCommands.Stop}"
										Executed="StopQuestion_Executed"
										CanExecute="StopQuestion_CanExecute" />
		<CommandBinding Command="{x:Static base:Commands.JudgeCommand}"
										Executed="Judge_Executed"
										CanExecute="Judge_CanExecute" />

	</Window.CommandBindings>
	<Window.InputBindings>
		<KeyBinding Key="F5" Command="{x:Static  hypermutus:Commands.SwitchPlayPauseCommand}" />
		<KeyBinding Key="F7" Modifiers="Shift" Command="{x:Static hypermutus:Commands.SeekRelativeCommand}" CommandParameter="30" />
		<KeyBinding Key="F7" Command="{x:Static hypermutus:Commands.SeekRelativeCommand}" CommandParameter="5" />
		<KeyBinding Key="F4" Command="{x:Static hypermutus:Commands.SeekRelativeCommand}" CommandParameter="-5" />
		<KeyBinding Key="F4" Modifiers="Shift" Command="{x:Static hypermutus:Commands.SeekRelativeCommand}" CommandParameter="-30" />
		<KeyBinding Key="F6" Command="{x:Static hypermutus:Commands.SeekSabiCommand}" />
		<KeyBinding Key="F6" Modifiers="Shift" Command="{x:Static grand:Commands.SetSabiPosCommand}" />
		<KeyBinding Key="F6" Modifiers="Ctrl" Command="{x:Static base:Commands.SetPlayPosCommand}" />
		<KeyBinding Key="F3" Command="PreviousTrack" />
		<KeyBinding Key="F8" Command="NextTrack" />
		<KeyBinding Key="I" Modifiers="Control" Command="{x:Static base:Commands.SaveSongInformationCommand}"
								CommandParameter="{Binding ElementName=dataGridQuestions, Path=SelectedItem}" />
		<KeyBinding Key="R" Modifiers="Control" Command="{x:Static base:Commands.ChangeFileNameCommand}"
								CommandParameter="{Binding ElementName=dataGridQuestions, Path=SelectedItem}" />
	</Window.InputBindings>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>

		<Menu Name="MainMenu" Grid.Row="0" HorizontalAlignment="Stretch" Padding="3"
					>
			<MenuItem Header="ファイル(_F)">
				<MenuItem Header="新規作成(_N)" Command="New" />
				<MenuItem Header="開く(_O)" Command="Open" />
				<MenuItem Header="履歴から開く(_H)" Name="menuItemHistory" />
				<MenuItem Header="保存(_S)" Command="Save" />
				<MenuItem Header="名前をつけて保存(_A)" Command="SaveAs" />
				<MenuItem Header="エクスポート(_E)" Command="{x:Static base:Commands.ExportCommand}" />
				<MenuItem Header="HyperMutus用に保存(_M)" Command="{x:Static base:Commands.SaveAsMtqCommand}" />
				<Separator />
				<MenuItem Header="終了(_X)" Command="Close" />
			</MenuItem>
			<MenuItem Header="編集(_E)">
				<MenuItem Header="元に戻す(_U)" Command="Undo" />
				<MenuItem Header="やり直し(_R)" Command="Redo" />
			</MenuItem>
			<MenuItem Header="曲リスト(_S)">
				<MenuItem Header="曲追加(_A)" Command="{x:Static grand:Commands.AddQuestionsCommand}" />
				<MenuItem Header="曲追加(フォルダ選択)(_D)"
									Command="{x:Static grand:Commands.AddQuestionsCommand}">
					<MenuItem.CommandParameter>
						<sys:Boolean>True</sys:Boolean>
					</MenuItem.CommandParameter>
				</MenuItem>
				<MenuItem Header="ホームフォルダ変更(_H)" Command="{x:Static grand:Commands.SetRootDirectoryCommand}" />
        <MenuItem Header="インポート(_I)" Command="{x:Static base:Commands.ImportCommand}" />
				<MenuItem Header="テキスト出力(_L)..." Click="MenuItemExportQuestionsList_Click" />
			</MenuItem>
			<MenuItem Header="表示(_V)">
				<MenuItem Name="menuItemCategoryVisible" Header="カテゴリ" IsCheckable="True" IsChecked="False" />
				<Separator />
				<MenuItem x:Name="menuItemIDColumnVisible" Header="ID列" IsCheckable="True"
									IsChecked="{Binding ElementName=questionsIDColumn, Path=Visibility, Converter={StaticResource fileNameVisibilityConverter}}" />
				<MenuItem Name="menuItemFileNameColumnVisible" Header="ファイル名列" IsCheckable="True"
									IsChecked="{Binding ElementName=questionsFileNameColumn, Path=Visibility, Converter={StaticResource fileNameVisibilityConverter}}" />
				<MenuItem Name="menuItemPlayPosColumnVisible" Header="開始位置列" IsCheckable="True"
									IsChecked="{Binding ElementName=questionsPlayPosColumn, Path=Visibility, Converter={StaticResource fileNameVisibilityConverter}}" />
				<MenuItem Name="menuItemSabiPosColumnVisible" Header="サビ位置列" IsCheckable="True"
									IsChecked="{Binding ElementName=questionsSabiPosColumn, Path=Visibility, Converter={StaticResource fileNameVisibilityConverter}}" />
				<MenuItem Name="menuItemStopPosColumnVisible" Header="停止位置列" IsCheckable="True"
									IsChecked="{Binding ElementName=questionsStopPosColumn, Path=Visibility, Converter={StaticResource fileNameVisibilityConverter}}" />
			</MenuItem>
			<MenuItem Header="曲再生(_P)">
				<MenuItem Header="再生開始" Command="Play"
									CommandParameter="{Binding ElementName=dataGridQuestions, Path=SelectedItem}" />
			</MenuItem>
			<MenuItem Header="モード(_M)" Name="menuItemMode" DataContext="{Binding RelativeSource={RelativeSource AncestorType=Window}}">
				<MenuItem Header="編集モード" Name="menuItemEditMode"
									Command="{x:Static base:Commands.SetWindowModeCommand}" CommandParameter="{x:Static base:WindowMode.Edit}">
					<MenuItem.IsChecked>
						<Binding Path="CurrentMode" Converter="{StaticResource equalsConverter}"
									 ConverterParameter="{x:Static base:WindowMode.Edit}">
						</Binding>
					</MenuItem.IsChecked>
				</MenuItem>
				<MenuItem Header="出題モード" Name="menuItemPlayMode"
									Command="{x:Static base:Commands.SetWindowModeCommand}" CommandParameter="{x:Static base:WindowMode.Play}">
					<MenuItem.IsChecked>
						<Binding Path="CurrentMode" Converter="{StaticResource equalsConverter}"
									 ConverterParameter="{x:Static base:WindowMode.Play}">
						</Binding>
					</MenuItem.IsChecked>
				</MenuItem>
				<MenuItem Header="リハーサル" IsCheckable="True">
					<MenuItem.IsChecked>
						<Binding Path="IsRehearsal">
						</Binding>
					</MenuItem.IsChecked>
				</MenuItem>
			</MenuItem>
		</Menu>

		<StackPanel Orientation="Horizontal" Grid.Row="1"
								Visibility="{Binding ElementName=menuItemCategoryVisible, Path=IsChecked, Converter={StaticResource categoryVisibilityConverter}}"
		>
			<GroupBox Header="表示カテゴリ" Margin="6,6" Width="213">
				<GroupBox.CommandBindings>
					<CommandBinding Command="{x:Static base:Commands.AddCategoryCommand}"
												Executed="AddCategory_Executed" CanExecute="AddCategory_CanExecute" />
				</GroupBox.CommandBindings>
				<StackPanel>
					<ComboBox HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="6,3" x:Name="comboBoxCategories"
									ItemsSource="{Binding Path=Categories, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
										SelectedItem="{Binding Path=CurrentCategory, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
										/>
					<Expander Header="カテゴリ追加" Collapsed="Expander_Expanded" Expanded="Expander_Expanded" Name="expanderNewCategory">
						<StackPanel Orientation="Horizontal">
							<TextBox MinWidth="100" Margin="3,5" x:Name="textBoxNewCategory" ToolTip="追加するカテゴリの名前を入れて下さい。" />
							<Button Content="追加" Name="buttonAddCategory" MinWidth="60" Margin="3"
										Command="{x:Static base:Commands.AddCategoryCommand}"
										CommandParameter="{Binding Text, ElementName=textBoxNewCategory}" />
						</StackPanel>
					</Expander>
				</StackPanel>
			</GroupBox>
			<GroupBox Header="カテゴリ移動" Width="200">
				<Grid>
					<ComboBox Name="comboBoxDestinationCategory"  Height="30"
										VerticalAlignment="Top" Margin="0,5"
										ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Categories}"
										>
					</ComboBox>
					<Button Content="移動" VerticalAlignment="Top" Height="30" Margin="0,40,0,5"
									Command="{x:Static base:Commands.ChangeCategoryCommand}"
									CommandParameter="{Binding ElementName=comboBoxDestinationCategory, Path=SelectedItem}"
									ToolTip="選択中の問題を、上で指定したカテゴリに移動します。" />
				</Grid>
			</GroupBox>
		</StackPanel>

		<Grid Grid.Row="2">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" Name="numberingColumn" />
			</Grid.ColumnDefinitions>
			<DataGrid Grid.Column="0" Margin="10" VerticalAlignment="Stretch"
							ItemsSource="{Binding Questions}" AutoGenerateColumns="False"
							CanUserAddRows="False" CanUserSortColumns="False"
							Name="dataGridQuestions"
							AllowDrop="True"
							DragOver="dataGridQuestions_DragOver"
							Drop="dataGridQuestions_Drop"
							>
				<DataGrid.Columns>
					<DataGridTextColumn Header="#" Binding="{Binding Path=ID}" IsReadOnly="True"
														ElementStyle="{StaticResource numericCellStyle}"
														x:Name="questionsIDColumn" Visibility="Collapsed" />
					<DataGridTextColumn Header="No" ElementStyle="{StaticResource numericCellStyle}"
					>
						<DataGridTextColumn.Binding>
							<Binding Path="No" Converter="{StaticResource noConverter}">
								<Binding.ValidationRules>
									<grand:NullableIntValidationRule />
								</Binding.ValidationRules>
							</Binding>
						</DataGridTextColumn.Binding>
					</DataGridTextColumn>
					<DataGridTextColumn Header="曲名" Binding="{Binding Path=Title}" Width="*" />
					<DataGridTextColumn Header="アーティスト" Binding="{Binding Path=Artist}" Width="*" />
					<!-- このVisibilityのバインディングが機能していない。
				たぶんXAMLのスコープの話だと思うが、どうすればいいのかはよくわからない。-->
					<DataGridTextColumn Header="ファイル名" Binding="{Binding Path=RelativeFileName}" IsReadOnly="True" Width="*"
														Visibility="Collapsed" x:Name="questionsFileNameColumn"
														>
						<DataGridTextColumn.ElementStyle>
							<Style TargetType="TextBlock">
								<Setter Property="ToolTip" Value="{Binding Path=FileName}" />
							</Style>
						</DataGridTextColumn.ElementStyle>
					</DataGridTextColumn>
					<DataGridTextColumn Header="開始" x:Name="questionsPlayPosColumn" ElementStyle="{StaticResource numericCellStyle}" MinWidth="60">
						<DataGridTextColumn.Binding>
							<Binding Path="PlayPos" Converter="{StaticResource durationConverter}" ConverterParameter="2">
								<Binding.ValidationRules>
									<base:DurationValidationRule />
								</Binding.ValidationRules>
							</Binding> 
						</DataGridTextColumn.Binding>
					</DataGridTextColumn>
					<DataGridTextColumn Header="サビ"	x:Name="questionsSabiPosColumn"
															ElementStyle="{StaticResource numericCellStyle}" MinWidth="60">
						<DataGridTextColumn.Binding>
							<Binding Path="SabiPos" Converter="{StaticResource durationConverter}" ConverterParameter="2">
								<Binding.ValidationRules>
									<base:DurationValidationRule />
								</Binding.ValidationRules>
							</Binding>
						</DataGridTextColumn.Binding>
					</DataGridTextColumn>
					<DataGridTextColumn Header="停止"	x:Name="questionsStopPosColumn" Visibility="Collapsed"
															ElementStyle="{StaticResource numericCellStyle}" MinWidth="60">
						<DataGridTextColumn.Binding>
							<Binding Path="StopPos" Converter="{StaticResource durationConverter}" ConverterParameter="2">
								<Binding.ValidationRules>
									<base:DurationValidationRule />
								</Binding.ValidationRules>
							</Binding>
						</DataGridTextColumn.Binding>
					</DataGridTextColumn>
				</DataGrid.Columns>
				<DataGrid.CommandBindings>
					<CommandBinding Command="Delete"
												Executed="DeleteQuestions_Executed" />
				</DataGrid.CommandBindings>
				<DataGrid.InputBindings>
					<KeyBinding 
						Key="F5" 
						Command="{x:Static hypermutus:Commands.SwitchPlayPauseCommand}"
						CommandParameter="{Binding
							RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid},
							Path=SelectedItem}"
					/>
				</DataGrid.InputBindings>
			</DataGrid>

			<StackPanel Grid.Column="1" Orientation="Vertical" VerticalAlignment="Center" Margin="0">
				<StackPanel.Resources>
					<Style TargetType="{x:Type Button}">
						<Setter Property="Width" Value="36" />
						<Setter Property="Height" Value="36" />
						<Setter Property="Margin" Value="10" />
						<Setter Property="CommandParameter" Value="{Binding ElementName=dataGridQuestions, Path=SelectedItems}" />
					</Style>
				</StackPanel.Resources>
				<Button Content="○"  Command="Play"
								CommandParameter="{Binding ElementName=dataGridQuestions, Path=SelectedItem}"
								ToolTip="再生を開始します。" />
				<Button Content="入" Command="{x:Static base:Commands.EnterQuestionsCommand}"
								ToolTip="選択した問題にNoをつけます。" />
				<Button Content="除" Command="{x:Static base:Commands.OmitQuestionsCommand}"
								ToolTip="選択した問題の番号を外します。" />
				<Button Content="↑" Command="{x:Static base:Commands.DecrementNoCommand}"
								ToolTip="選択した問題の番号を1つ減らします。" />
				<Button Content="↓" Command="{x:Static base:Commands.IncrementNoCommand}"
								ToolTip="選択した問題のNoを1つ増やします。" />
			</StackPanel>
		</Grid>

		<Expander Header="曲再生" Name="expanderSongPlayer" Margin="0" Grid.Row="3"
							DataContext="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=CurrentSong}">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>
				<DockPanel Grid.Row="0">
					<DockPanel.Resources>
						<Style TargetType="Button">
							<Setter Property="Padding" Value="5" />
							<Setter Property="MinWidth" Value="75" />
							<Setter Property="MinHeight" Value="40" />
							<Setter Property="VerticalAlignment" Value="Center" />
							<Setter Property="Margin" Value="10,5" />
						</Style>
					</DockPanel.Resources>
					<Button Content="再生" DockPanel.Dock="Left"
								Command="{x:Static hypermutus:Commands.SwitchPlayPauseCommand}" />
					<Button Content="サビ" DockPanel.Dock="Left"
								Command="{x:Static hypermutus:Commands.SeekSabiCommand}" />
					<TabControl DockPanel.Dock="Left" Margin="10,0,0,0" Height="80" HorizontalAlignment="Left"
										TabStripPlacement="Left">
						<TabControl.Resources>
							<Style TargetType="StackPanel">
								<Setter Property="Orientation" Value="Horizontal" />
								<Setter Property="FlowDirection" Value="LeftToRight" />
							</Style>
							<Style TargetType="Button">
								<Setter Property="Height" Value="34" />
								<Setter Property="Width" Value="100" />
								<Setter Property="HorizontalAlignment" Value="Left" />
								<Setter Property="Margin" Value="5,0,0,0" />
							</Style>
							<Style TargetType="TextBox">
								<Setter Property="Height" Value="34" />
								<Setter Property="Width" Value="80" />
								<Setter Property="HorizontalAlignment" Value="Left" />
								<Setter Property="Margin" Value="10,0,0,0" />
								<Setter Property="VerticalContentAlignment" Value="Center" />
								<Setter Property="HorizontalContentAlignment" Value="Right" />
								<Setter Property="TextWrapping" Value="Wrap" />
							</Style>
							<Style TargetType="ud:UpDownControl">
								<Setter Property="Height" Value="34" />
								<Setter Property="Width" Value="32" />
								<Setter Property="HorizontalAlignment" Value="Left" />
								<Setter Property="Margin" Value="0,0,0,0" />
							</Style>
						</TabControl.Resources>
						<TabItem Header="サビ">
							<StackPanel>
								<Button Content="サビ設定"
											Command="{x:Static grand:Commands.SetSabiPosCommand}" />
								<TextBox>
									<TextBox.Text>
										<Binding Path="SabiPos" Converter="{StaticResource durationConverter}" ConverterParameter="2">
											<Binding.ValidationRules>
												<base:DurationValidationRule />
											</Binding.ValidationRules>
										</Binding>
									</TextBox.Text>
								</TextBox>
								<ud:UpDownControl UpClick="UpDownControl_UpClick" DownClick="UpDownControl_DownClick" />
							</StackPanel>
						</TabItem>
						<TabItem Header="開始">
							<StackPanel>
								<Button Content="開始位置設定" VerticalAlignment="Center"
								Command="{x:Static base:Commands.SetPlayPosCommand}" />
								<TextBox>
									<TextBox.Text>
										<Binding Path="PlayPos" Converter="{StaticResource durationConverter}" ConverterParameter="2">
											<Binding.ValidationRules>
												<base:DurationValidationRule />
											</Binding.ValidationRules>
										</Binding>
									</TextBox.Text>

								</TextBox>
								<ud:UpDownControl UpClick="UpDownControlPlayPos_UpClick" DownClick="UpDownControlPlayPos_DownClick" />
							</StackPanel>
						</TabItem>
						<TabItem Header="停止">
							<StackPanel>
								<Button Content="停止位置設定" VerticalAlignment="Center"
								Command="{x:Static base:Commands.SetStopPosCommand}" />
								<TextBox>
									<TextBox.Text>
										<Binding Path="StopPos" Converter="{StaticResource durationConverter}" ConverterParameter="2">
											<Binding.ValidationRules>
												<base:DurationValidationRule />
											</Binding.ValidationRules>
										</Binding>
									</TextBox.Text>

								</TextBox>
								<ud:UpDownControl
									UpClick="UpDownControlStopPos_UpClick" DownClick="UpDownControlStopPos_DownClick" />
							</StackPanel>
						</TabItem>
					</TabControl>
					<Slider Style="{StaticResource volumeSliderStyle}" Margin="10,0"
									Value="{Binding RelativeSource={RelativeSource AncestorType=local:MainWindow}, Path=MySongPlayer.Volume}"
									/>
				</DockPanel>
				<DockPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">
					<Label Name="labelDuration" DockPanel.Dock="Right" HorizontalContentAlignment="Right" MinWidth="60"
								HorizontalAlignment="Right" ContentStringFormat="m\:ss" Content="{x:Static sys:TimeSpan.Zero}"
								Margin="0,8,20,8" VerticalAlignment="Center"/>
					<Label Name="labelCurrentPosition" DockPanel.Dock="Right" MinWidth="60"
								Content="{Binding RelativeSource={RelativeSource AncestorType=Window},
													Path=MySongPlayer.CurrentPosition, Mode=OneWay}" ContentStringFormat="m\:ss"
								HorizontalAlignment="Right" HorizontalContentAlignment="Right"
								Margin="0,16,40,15" VerticalAlignment="Center"/>

					<Slider Margin="30,4,30,4" VerticalAlignment="Center"
								TickFrequency="60" Maximum="100" Minimum="0" Name="sliderSeekSong" TickPlacement="BottomRight"
								LargeChange="30" SmallChange="5"
								Value="{Binding RelativeSource={RelativeSource AncestorType=Window},
												Path=MySongPlayer.CurrentPosition, Mode=TwoWay, Converter={StaticResource timeSpanDoubleConverter}}"/>
				</DockPanel>
			</Grid>
		</Expander>
		<Expander Header="出題" Name="expanderQuestionPlayer" Visibility="Collapsed" Margin="0" Grid.Row="4"
							DataContext="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=MyQuestionPlayer}">
			<Expander.CommandBindings>
				<CommandBinding	Command="{x:Static hypermutus:Commands.SeekSabiCommand}"
										Executed="Play_SeekSabi_Executed"
										CanExecute="Play_SongPlayer_CanExecute" />
				<CommandBinding
										Command="{x:Static hypermutus:Commands.SwitchPlayPauseCommand}"
										Executed="Play_SwitchPlayPause_Executed"
										CanExecute="Play_SwitchPlayPause_CanExecute" />
			</Expander.CommandBindings>
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
				<DockPanel Grid.Row="0">
					<Button Content="NEXT" DockPanel.Dock="Left" Margin="10,5" Width="100"
								Command="{x:Static base:Commands.NextQuestionCommand}" />
					<Label Content="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=CurrentQuestion.Answer}"
								 Name="labelCurrentQuestion" />
				</DockPanel>
				<DockPanel Grid.Row="1">
					<Button Content="開始" DockPanel.Dock="Left" Margin="10,5" Width="100"
								Command="{x:Static hypermutus:QuizCommands.Start}" />
					<Button Content="停止" DockPanel.Dock="Left" Margin="10,5" Width="100"
								Command="{x:Static hypermutus:QuizCommands.Stop}" />
					<Button Content="○" DockPanel.Dock="Left" Margin="10,5" Width="70"
								Command="{x:Static base:Commands.JudgeCommand}" CommandParameter="○" />
					<Button Content="×" DockPanel.Dock="Left" Margin="10,5" Width="70"
								Command="{x:Static base:Commands.JudgeCommand}" CommandParameter="×" />
					<Slider Style="{StaticResource volumeSliderStyle}" Margin="10,0"
									Value="{Binding Path=Volume}"
									/>
				</DockPanel>
				<DockPanel Grid.Row="2">
					<Button Content="再生" DockPanel.Dock="Left" Margin="10,5" Width="100"
									Command="{x:Static hypermutus:Commands.SwitchPlayPauseCommand}"
									IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=CurrentPhase,
																			Converter={StaticResource freePlayConverter}}"/>
					<Button Content="サビ" DockPanel.Dock="Left" Margin="10,5" Width="100"
									Command="{x:Static hypermutus:Commands.SeekSabiCommand}"
									/>
					<Label Name="labelDuration_Play" DockPanel.Dock="Right" HorizontalContentAlignment="Right" MinWidth="60"
								HorizontalAlignment="Right" ContentStringFormat="m\:ss" Content="{Binding Path=Duration}"
								Margin="0,8,20,8" VerticalAlignment="Center"/>
					<Label Name="labelCurrentPosition_Play" DockPanel.Dock="Right" MinWidth="60"
								Content="{Binding Path=CurrentPosition, Mode=OneWay}" ContentStringFormat="m\:ss"
								HorizontalAlignment="Right" HorizontalContentAlignment="Right"
								Margin="0,16,40,15" VerticalAlignment="Center"/>

					<Slider Margin="30,4,30,4" VerticalAlignment="Center"
								TickFrequency="60" Maximum="100" Minimum="0" Name="sliderSeekSong_Play" TickPlacement="BottomRight"
								LargeChange="30" SmallChange="5"
								Value="{Binding Path=CurrentPosition, Mode=TwoWay, Converter={StaticResource timeSpanDoubleConverter}}"
								IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=CurrentPhase,
																		Converter={StaticResource freePlayConverter}}"/>
				</DockPanel>

			</Grid>
		</Expander>
		<StatusBar Height="32" Grid.Row="5" />
	</Grid>
</appbase:BasicWindow>
