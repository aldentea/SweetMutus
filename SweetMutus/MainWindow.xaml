<base:BasicWindow x:Class="Aldentea.SweetMutus.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
				xmlns:sys="clr-namespace:System;assembly=mscorlib"
				xmlns:base="clr-namespace:Aldentea.Wpf.Application;assembly=AldenteaWpfApplication"
        xmlns:util="clr-namespace:Aldentea.Wpf.Utility;assembly=AldenteaWpfUtility"
				xmlns:hypermutus="clr-namespace:HyperMutus;assembly=MutusBase"
				xmlns:grand="clr-namespace:GrandMutus.Base;assembly=GrandMutusBase"
				xmlns:local="clr-namespace:Aldentea.SweetMutus"
				xmlns:ud="clr-namespace:Aldentea.Wpf.Controls;assembly=UpDownControl"
				OpenFileDialogFilter="SweetMutusファイル(*.smt)|*.smt"
				SaveFileDialogFilter="SweetMutusファイル(*.smt)|*.smt"
        Height="600" Width="800">
	<Window.Resources>
		<util:CaptionConverter x:Key="captionConverter" ApplicationName="SweetMutus" />
		<util:TimeSpanDoubleConverter x:Key="timeSpanDoubleConverter" />
		<grand:NullableIntConverter x:Key="noConverter" />
		<grand:VisibilityConverter x:Key="categoryVisibilityConverter" />
		<grand:VisibilityConverter x:Key="fileNameVisibilityConverter" />
		<Style TargetType="DataGridCell" x:Key="numericCellStyle">
			<Setter Property="HorizontalAlignment" Value="Right" />
		</Style>
	</Window.Resources>
	<Window.Title>
		<MultiBinding Converter="{StaticResource captionConverter}">
			<Binding Path="FileName" />
			<Binding Path="IsModified" />
			<Binding Path="IsReadOnly" />
		</MultiBinding>
	</Window.Title>
	<Window.CommandBindings>
		<CommandBinding Command="{x:Static grand:Commands.AddQuestionsCommand}"
										Executed="AddQuestions_Executed" CanExecute="Always_CanExecute"/>
		<CommandBinding Command="{x:Static local:Commands.ExportCommand}"
										Executed="Export_Executed" CanExecute="Always_CanExecute" />
		<CommandBinding Command="{x:Static grand:Commands.SetRootDirectoryCommand}"
										Executed="SetRootDirectory_Executed" CanExecute="Always_CanExecute" />
		<CommandBinding Command="{x:Static local:Commands.SaveAsMtqCommand}"
										Executed="SaveAsMtq_Executed" CanExecute="Always_CanExecute" />
		<CommandBinding Command="Play"
										Executed="Play_Executed"
										CanExecute="Play_CanExecute" />
		<CommandBinding
										Command="{x:Static hypermutus:Commands.SwitchPlayPauseCommand}"
										Executed="SwitchPlayPause_Executed"
										CanExecute="SongPlayer_CanExecute" />
		<CommandBinding
										Command="{x:Static hypermutus:Commands.SeekSabiCommand}"
										Executed="SeekSabi_Executed"
										CanExecute="SongPlayer_CanExecute" />
		<CommandBinding Command="{x:Static grand:Commands.SetSabiPosCommand}"
										Executed="SetSabiPos_Executed"
										CanExecute="SongPlayer_CanExecute" />
		<CommandBinding Command="{x:Static hypermutus:Commands.SeekRelativeCommand}"
										Executed="SeekRelative_executed"
										CanExecute="SongPlayer_CanExecute" />
		<CommandBinding Command="{x:Static local:Commands.SaveSongInformationCommand}"
										Executed="SaveSongInformation_Executed"
										CanExecute="SaveSongInformation_CanExecute" />
	</Window.CommandBindings>
	<Window.InputBindings>
		<KeyBinding Key="F7" Modifiers="Shift" Command="{x:Static hypermutus:Commands.SeekRelativeCommand}" CommandParameter="30" />
		<KeyBinding Key="F7" Command="{x:Static hypermutus:Commands.SeekRelativeCommand}" CommandParameter="5" />
		<KeyBinding Key="F4" Command="{x:Static hypermutus:Commands.SeekRelativeCommand}" CommandParameter="-5" />
		<KeyBinding Key="F4" Modifiers="Shift" Command="{x:Static hypermutus:Commands.SeekRelativeCommand}" CommandParameter="-30" />
		<KeyBinding Key="F6" Command="{x:Static hypermutus:Commands.SeekSabiCommand}" />
		<KeyBinding Key="I" Modifiers="Control" Command="{x:Static local:Commands.SaveSongInformationCommand}"
								CommandParameter="{Binding ElementName=dataGridQuestions, Path=SelectedItem}" />
	</Window.InputBindings>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>

		<Menu Name="MainMenu" Grid.Row="0" HorizontalAlignment="Stretch">
			<MenuItem Header="ファイル(_F)">
				<MenuItem Header="新規作成(_N)" Command="New" />
				<MenuItem Header="開く(_O)" Command="Open" />
				<MenuItem Header="履歴から開く(_H)" Name="menuItemHistory" />
				<MenuItem Header="保存(_S)" Command="Save" />
				<MenuItem Header="名前をつけて保存(_A)" Command="SaveAs" />
				<MenuItem Header="エクスポート(_E)" Command="{x:Static local:Commands.ExportCommand}" />
				<MenuItem Header="HyperMutus用に保存(_M)" Command="{x:Static local:Commands.SaveAsMtqCommand}" />
				<Separator />
				<MenuItem Header="終了(_X)" Command="Close" />
			</MenuItem>
			<MenuItem Header="編集(_E)">
				<MenuItem Header="元に戻す(_U)" Command="Undo" />
				<MenuItem Header="やり直し(_R)" Command="Redo" />
			</MenuItem>
			<MenuItem Header="曲リスト(_S)">
				<MenuItem Header="曲追加(_A)" Command="{x:Static grand:Commands.AddQuestionsCommand}" />
				<MenuItem Header="曲追加(フォルダ選択)(_D)"
									Command="{x:Static grand:Commands.AddQuestionsCommand}">
					<MenuItem.CommandParameter>
						<sys:Boolean>True</sys:Boolean>
					</MenuItem.CommandParameter>
				</MenuItem>
				<MenuItem Header="ホームフォルダ変更(_H)" Command="{x:Static grand:Commands.SetRootDirectoryCommand}" />
			</MenuItem>
			<MenuItem Header="表示(_V)">
				<MenuItem Name="menuItemCategoryVisible" Header="カテゴリ" IsCheckable="True" IsChecked="False" />
				<MenuItem Name="menuItemFileNameColumnVisible" Header="ファイル名列" IsCheckable="True" IsChecked="False" />
			</MenuItem>
			<MenuItem Header="お試し">
				<MenuItem Header="フィルタ" Click="MenuItemFilter_Click" />
			</MenuItem>
		</Menu>

		<GroupBox Header="カテゴリ" HorizontalAlignment="Left" Margin="6,6" Grid.Row="1"
				Width="213"
				Visibility="{Binding ElementName=menuItemCategoryVisible, Path=IsChecked, Converter={StaticResource categoryVisibilityConverter}}">
			<GroupBox.CommandBindings>
				<CommandBinding Command="{x:Static local:Commands.AddCategoryCommand}"
												Executed="AddCategory_Executed" CanExecute="AddCategory_CanExecute" />
			</GroupBox.CommandBindings>
			<StackPanel>
				<ComboBox HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="6,3" Name="comboBoxCategories"
									SelectionChanged="comboBoxCategories_SelectionChanged"/>
				<Expander Header="カテゴリ追加" Collapsed="Expander_Expanded" Expanded="Expander_Expanded">
					<StackPanel Orientation="Horizontal">
						<TextBox MinWidth="100" Margin="3,5" Name="textBoxNewCategory" ToolTip="追加するカテゴリの名前を入れて下さい。" />
						<Button Content="追加" MinWidth="60" Margin="3"
										Command="{x:Static local:Commands.AddCategoryCommand}"
										CommandParameter="{Binding ElementName=textBoxNewCategory, Path=Text}" />
					</StackPanel>
				</Expander>
			</StackPanel>
		</GroupBox>

		<DataGrid Margin="10" Grid.Row="2"
							ItemsSource="{Binding Questions}" AutoGenerateColumns="False"
							CanUserAddRows="False" CanUserSortColumns="False"
							Name="dataGridQuestions"
							>
			<DataGrid.Columns>
				<DataGridTextColumn Header="#" Binding="{Binding Path=ID}" IsReadOnly="True"
														CellStyle="{StaticResource numericCellStyle}" />
				<DataGridTextColumn Header="No" Binding="{Binding Path=No, Converter={StaticResource noConverter}}"
														CellStyle="{StaticResource numericCellStyle}" />
				<DataGridTextColumn Header="Title" Binding="{Binding Path=Title}" Width="*" />
				<DataGridTextColumn Header="Artist" Binding="{Binding Path=Artist}" Width="*" />
				<!-- このVisibilityのバインディングが機能していない。
				たぶんXAMLのスコープの話だと思うが、どうすればいいのかはよくわからない。-->
<!--				<DataGridTextColumn Header="FileName" Binding="{Binding Path=RelativeFileName}" IsReadOnly="True"
														Visibility="{Binding ElementName=menuItemFileNameColumnVisible, Path=IsChecked,
																									Converter={StaticResource fileNameVisibilityConverter}}"
														/>
-->				<DataGridTextColumn Header="FileName" Binding="{Binding Path=RelativeFileName}" IsReadOnly="True"
														Visibility="Collapsed"		/>
				<DataGridTextColumn Header="Start" Binding="{Binding Path=PlayPos, Converter={StaticResource timeSpanDoubleConverter}}"
														CellStyle="{StaticResource numericCellStyle}" MinWidth="60" />
				<DataGridTextColumn Header="Sabi" Binding="{Binding Path=SabiPos, Converter={StaticResource timeSpanDoubleConverter}}"
														CellStyle="{StaticResource numericCellStyle}" MinWidth="60" />
			</DataGrid.Columns>
		</DataGrid>

		<Expander Header="曲再生" Name="expanderSongPlayer" Margin="0" Grid.Row="3"
							DataContext="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=CurrentSong}">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>
				<Button Content="Play" Grid.Row="0" Height="30" Width="75"
								HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,5"
								Command="{x:Static hypermutus:Commands.SwitchPlayPauseCommand}" />
				<Button Content="サビ" Grid.Row="0" Height="30" Width="75"
								HorizontalAlignment="Left" VerticalAlignment="Top" Margin="99,5,0,5"
								Command="{x:Static hypermutus:Commands.SeekSabiCommand}" />
				<Button Content="サビ設定" Grid.Row="0" Height="30" Width="75"
								HorizontalAlignment="Left" VerticalAlignment="Top" Margin="290,5,0,5"
								Command="{x:Static grand:Commands.SetSabiPosCommand}" />
				<TextBox HorizontalAlignment="Left" Grid.Row="0" Height="30" Margin="385,5,0,5"
									TextWrapping="Wrap" Text="{Binding Path=SabiPos, StringFormat=m\\:ss\\.ff}"
									VerticalAlignment="Top" Width="77" HorizontalContentAlignment="Right" VerticalContentAlignment="Center"/>
				<ud:UpDownControl Grid.Row="0" Height="30" Width="36" Margin="462,5,0,5" HorizontalAlignment="Left" VerticalAlignment="Top"
									UpClick="UpDownControl_UpClick" DownClick="UpDownControl_DownClick" />
				<Slider HorizontalAlignment="Left" Grid.Row="0" Margin="590,12,0,5" VerticalAlignment="Top" Width="166" ToolTip="音量"
								Value="{Binding RelativeSource={RelativeSource AncestorType=local:MainWindow}, Path=SongPlayer.Volume}"
								Maximum="1" Minimum="0" SmallChange="0.01" LargeChange="0.1" />
				<Slider HorizontalAlignment="Left" Grid.Row="1" Height="41" Margin="31,12,0,0" VerticalAlignment="Top" Width="324"
								TickFrequency="60" Maximum="100" Minimum="0" Name="sliderSeekSong" TickPlacement="BottomRight"
								LargeChange="30" SmallChange="5"
								Value="{Binding RelativeSource={RelativeSource AncestorType=Window},
												Path=SongPlayer.CurrentPosition, Mode=TwoWay, Converter={StaticResource timeSpanDoubleConverter}}"/>
				<Label Name="labelCurrentPosition2"  Grid.Row="1"
								Content="{Binding RelativeSource={RelativeSource AncestorType=Window},
													Path=SongPlayer.CurrentPosition, Mode=OneWay}" ContentStringFormat="m\:ss"
								HorizontalAlignment="Left"
								Margin="421,23,0,0" VerticalAlignment="Top"/>
				<Label Name="labelDuration"
								HorizontalAlignment="Left" ContentStringFormat="m\:ss" Content="{x:Static sys:TimeSpan.Zero}"
								Margin="521,23,0,0" Grid.Row="1" VerticalAlignment="Top"/>
			</Grid>
		</Expander>

		<StatusBar Height="32" Grid.Row="4" />
	</Grid>
</base:BasicWindow>
